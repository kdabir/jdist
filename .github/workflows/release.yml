name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false
  push:
    branches: [ main ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build and package all targets
      run: |
        chmod +x ./gradlew
        ./gradlew build
        ./gradlew detectModuleDependencies
        ./gradlew :cli:nativeCompile :service:nativeCompile
        ./gradlew createAllJlinkImages
        ./gradlew packageAll
        ./gradlew distributionReport moduleAnalysisReport
        
    - name: Create release assets
      run: |
        mkdir -p release-assets
        
        # Copy all built artifacts
        cp -r cli/build/jpackage/* release-assets/ 2>/dev/null || true
        cp -r desktop/build/jpackage/* release-assets/ 2>/dev/null || true
        cp -r service/build/jpackage/* release-assets/ 2>/dev/null || true
        cp -r service-desktop/build/jpackage/* release-assets/ 2>/dev/null || true
        
        # Copy native executables
        cp cli/build/native/nativeCompile/system-test-cli release-assets/ 2>/dev/null || true
        cp service/build/native/nativeCompile/system-test-service release-assets/ 2>/dev/null || true
        
        # Copy reports
        cp build/distribution-report.md release-assets/ 2>/dev/null || true
        cp build/module-analysis-report.md release-assets/ 2>/dev/null || true
        
        # Create installation guide
        cat > release-assets/INSTALL.md << 'EOF'
        # System Test Suite - Installation Guide
        
        ## Quick Start
        
        1. **Download** the appropriate installer for your platform
        2. **Install** using the platform-specific method below
        3. **Run** the application
        
        ## Platform-Specific Installation
        
        ### macOS
        - **Native App**: Double-click the `.app` file
        - **Installer**: Run the `.dmg` file and drag to Applications
        - **Native Executable**: Run `./system-test-cli` or `./system-test-service`
        
        ### Windows
        - **Installer**: Run the `.msi` file
        - **Portable**: Run the `.exe` file directly
        - **Native Executable**: Run `system-test-cli.exe` or `system-test-service.exe`
        
        ### Linux
        - **Package**: Install the `.deb` file with `sudo dpkg -i *.deb`
        - **Native Executable**: Run `./system-test-cli` or `./system-test-service`
        
        ## Applications
        
        - **CLI**: Command-line interface for system testing
        - **Desktop**: GUI application with modern UI
        - **Service**: Web service accessible at http://localhost:8080
        - **Service-Desktop**: Web service with automatic browser opening
        
        ## Native Executables
        
        The following native executables are available for faster startup:
        - `system-test-cli` (16MB) - CLI application
        - `system-test-service` (29MB) - Web service
        
        These don't require Java to be installed on the target system.
        
        ## Reports
        
        - `distribution-report.md`: Comprehensive distribution information
        - `module-analysis-report.md`: Module dependency analysis
        
        EOF
        
        # Create platform-specific archives
        tar -czf "system-test-suite-${{ github.event.inputs.version || 'latest' }}.tar.gz" -C release-assets .
        
        # List created assets
        ls -la release-assets/
        ls -la *.tar.gz
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version || 'v1.0.0' }}
        name: System Test Suite ${{ github.event.inputs.version || 'v1.0.0' }}
        body: |
          # System Test Suite ${{ github.event.inputs.version || 'v1.0.0' }}
          
          ## 🚀 What's New
          
          - Cross-platform native installers for all major operating systems
          - Native executables for CLI and Service applications (GraalVM)
          - Custom JVM images for reduced distribution size
          - Java Module System (JPMS) support with automatic dependency detection
          - Modern UI with dark mode support
          - Web service with HTML interface
          
          ## 📦 Downloads
          
          ### Complete Package
          - **All Platforms**: `system-test-suite-${{ github.event.inputs.version || 'latest' }}.tar.gz`
          
          ### Individual Applications
          - **CLI**: Command-line interface with native executable
          - **Desktop**: Modern Swing GUI application
          - **Service**: Web service with HTML interface
          - **Service-Desktop**: Web service with automatic browser opening
          
          ## 🛠️ Installation
          
          1. Download the appropriate package for your platform
          2. Extract the archive
          3. Follow the instructions in `INSTALL.md`
          
          ## ✨ Features
          
          - ✅ **Cross-Platform**: macOS, Windows, Linux support
          - ✅ **Native Executables**: Fast startup, no JVM required
          - ✅ **Modern UI**: Dark mode, responsive design
          - ✅ **Web Interface**: HTML-based service interface
          - ✅ **Module System**: Java 9+ module support
          - ✅ **Auto-Detection**: Automatic module dependency detection
          - ✅ **Multiple Formats**: DMG, MSI, DEB, native executables
          
          ## 📊 Reports
          
          - `distribution-report.md`: Comprehensive distribution information
          - `module-analysis-report.md`: Module dependency analysis
          
          ## 🔧 System Requirements
          
          - **Java**: 21+ (for JVM-based distributions)
          - **OS**: macOS 10.15+, Windows 10+, Ubuntu 18.04+
          - **Memory**: 512MB RAM minimum
          - **Disk**: 100MB free space
          
        files: |
          system-test-suite-${{ github.event.inputs.version || 'latest' }}.tar.gz
        prerelease: ${{ github.event.inputs.prerelease == 'true' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
